// Generated by CoffeeScript 1.7.1
(function() {
  var JstTemplatesCompiler;

  module.exports = JstTemplatesCompiler = (function() {
    JstTemplatesCompiler.prototype.brunchPlugin = true;

    JstTemplatesCompiler.prototype.type = 'template';

    JstTemplatesCompiler.prototype.extension = 'js';

    function JstTemplatesCompiler(config) {
      var _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7;
      this.namespace = ((_ref = config.plugins) != null ? (_ref1 = _ref.jstTemplates) != null ? _ref1.namespace : void 0 : void 0) || 'JST';
      this.basePath = ((_ref2 = config.plugins) != null ? (_ref3 = _ref2.jstTemplates) != null ? _ref3.basePath : void 0 : void 0) || 'app';
      this.keepExt = (_ref4 = config.plugins) != null ? (_ref5 = _ref4.jstTemplates) != null ? _ref5.keepExt : void 0 : void 0;
      this.pattern = ((_ref6 = config.plugins) != null ? (_ref7 = _ref6.jstTemplates) != null ? _ref7.pattern : void 0 : void 0) || /\.(html|jade|eco|hbs|handlebars)$/;
    }

    JstTemplatesCompiler.prototype.compile = function(data, path, callback) {
      var regex;
      if (this.basePath) {
        regex = new RegExp("^" + this.basePath + "\/");
        path = path.replace(regex, '');
      }
      if (!this.keepExt) {
        path = path.replace(/\.\w+$/, '');
      }
      return callback(null, "(function() {\n  window['" + this.namespace + "'] = window['" + this.namespace + "'] || function(name) {\n    return window['" + this.namespace + "'][name];\n  };\n\n  // Force CommonJS to capture from preprocessors\n  var define, module = { exports: true };\n\n  // Include the data from preprocessor\n  " + data + ";\n\n  window['" + this.namespace + "']['" + path + "'] = module.exports;\n\n})();");
    };

    return JstTemplatesCompiler;

  })();

}).call(this);
